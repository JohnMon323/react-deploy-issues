{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["App","props","getIssues","fetch","then","res","json","result","setState","isLoaded","issues","items","error","state","this","message","class","map","issue","title","number","id","html_url","href","target","body","substring","created_at","comments","React","Component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"uOAmFeA,G,wDA7Eb,WAAYC,GAAQ,IAAD,8BACjB,cAAMA,IAYRC,UAAY,WACVC,MAAM,2FACHC,MAAK,SAAAC,GAAG,OAAIA,EAAIC,UAChBF,MACC,SAACG,GACC,EAAKC,SAAS,CACZC,UAAU,EACVC,OAAQH,EAAOI,WAInB,SAACC,GACC,EAAKJ,SAAS,CACZC,UAAU,EACVG,cAzBR,EAAKC,MAAQ,CACXD,MAAO,KACPH,UAAU,EACVC,OAAQ,IALO,E,gEASjBI,KAAKZ,c,+BAwBG,IAAD,EAC6BY,KAAKD,MAAjCD,EADD,EACCA,MAAOH,EADR,EACQA,SAAUC,EADlB,EACkBA,OAEzB,OAAIE,EACK,0CAAaA,EAAMG,WAChBN,EAIR,sBAAKO,MAAM,YAAX,UAGE,qCACE,qGACA,4DACA,kKAGF,qBAAKA,MAAM,aAAX,SACGN,EAAOO,KAAI,SAAAC,GAAK,OACf,oBAAGF,MAAM,uEAAT,UACE,sBAAKA,MAAM,uCAAX,UACE,oBAAIA,MAAM,OAAV,SAAkBE,EAAMC,QACxB,6CAAgBD,EAAME,OAAtB,aAAwCF,EAAML,YAEhD,qCAAQK,EAAMG,MACd,sCAASH,EAAMI,YACf,oBAAGC,KAAML,EAAMI,SAAUE,OAAO,SAASR,MAAM,OAA/C,UAAuDE,EAAMO,KAAKC,UAAU,EAAE,KAA9E,uBACA,uBACA,iDAAoBR,EAAMS,cAC1B,uBACA,+CAAiB,sBAAMX,MAAM,wBAAZ,SAAqCE,EAAMU,gBAXuBV,EAAMG,YAd5F,iD,GAxCKQ,IAAMC,YCOTC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqB7B,MAAK,YAAkD,IAA/C8B,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.a1a61c4d.chunk.js","sourcesContent":["import React from 'react'\nimport './App.css';\n\n\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      error: null,\n      isLoaded: false,\n      issues: []\n    };\n  }\n  componentDidMount() {\n    this.getIssues()\n  }\n\n\n  getIssues = () =>{\n    fetch(\"https://api.github.com/search/issues?q=repo:kamranahmedse/developer-roadmap/ type:issue\")\n      .then(res => res.json())\n      .then(\n        (result) => {\n          this.setState({\n            isLoaded: true,\n            issues: result.items\n          });\n        },\n\n        (error) => {\n          this.setState({\n            isLoaded: true,\n            error\n          });\n        }\n      )\n  }\n\n  render() {\n    const { error, isLoaded, issues } = this.state;\n\n    if (error) {\n      return <div>Error: {error.message}</div>;\n    } else if (!isLoaded) {\n      return <div>Loading...</div>;\n    } else {\n      return (\n        <div class=\"container\">\n\n\n          <>\n            <h4>This is the list from Kamranahmedse USER and developer-roadmap REPO</h4>\n            <p>Created by Jonathan Montiel</p>\n            <p>React, Github API lack of pagination because I'm still exploring the API, trying to include the headers for the link parameter</p>\n          </>\n\n          <div class=\"list-group\">\n            {issues.map(issue => (\n              <a class=\"list-group-item list-group-item-action flex-column align-items-start\" key={issue.id}>\n                <div class=\"d-flex w-100 justify-content-between\">\n                  <h5 class=\"mb-1\">{issue.title}</h5>\n                  <small>Number: {issue.number} - State: {issue.state}</small>\n                </div>\n                <p>Id: {issue.id}</p>\n                <p>URL: {issue.html_url}</p>\n                <a href={issue.html_url} target=\"_blank\" class=\"mb-1\">{issue.body.substring(0,120)} \" ... Read More\"</a>\n                <br/>\n                <small>Created at: {issue.created_at}</small>\n                <br />\n                <small>Comments: <span class=\"badge badge-secondary\">{issue.comments}</span></small>\n              </a>\n            ))}\n          </div>\n\n        </div>\n        \n      );\n    }\n  }\n}\n\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}